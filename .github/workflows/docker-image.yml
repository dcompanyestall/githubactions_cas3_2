name: Docker Image CI
# Logs in to Docker Hub using GitHub secrets.
# Extracts metadata for better tagging
# Setup buildx to enable attestation support
# Builds and pushes the container image to docker hub, establishing provenance  
# Generates SLSA provenance

on:
  push:
    branches: [ "main" ]
    # Publish semrer tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
    contents: write
    packages: write
    id-token: write
    actions: write
    security-events: write
    
env:
  # Use docker.io for Docker Hub if empty
  # REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ env.IMAGE_NAME }}
      digest: ${{ steps.build-push.outputs.digest }}
    

    steps:
    - name: Checkout the repository code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Extract metadata for Docker image
      id: meta
      uses: docker/metadata-action@v5
      with:
        #images: ${{ secrets.DOCKERHUB_USERNAME }}/githubactions_cas3_2
        images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=sha  # Tags the image with the commit SHA
          type=ref,event=branch  # Tags the image with the branch name
         
    - name: Set up Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      #with:
        #driver: docker-container  # âœ… Enables attestation support
    
    - name: Build and push the Docker image
      id: build-push
      uses: docker/build-push-action@v5
      with:
        context: .
        #push: ${{ github.event_name != 'pull_request' }}
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/githubactions_cas3_2:main
        labels: ${{ steps.meta.outputs.labels }}
        #provenance: true
        #builder: ${{ steps.buildx.outputs.name }}  # Use the Buildx builder 
        provenance: true
        outputs: type=image,name=${{ secrets.DOCKERHUB_USERNAME }}/githubactions_cas3_2,push=true

    - name: Capture image digest
      run: echo "IMAGE_DIGEST=${{ steps.build-push.outputs.digest }}" >> $GITHUB_ENV
        
  sign-and-upload-provenance:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    permissions:
        id-token: write  # Needed for Cosign keyless signing
        packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Cosign
      run: |
        COSIGN_VERSION=$(curl -s https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r .tag_name)
        curl -Lo cosign https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64
        chmod +x cosign
        sudo mv cosign /usr/local/bin/
    
    - name: Retrieve digest from build-and-push
      run: echo "IMAGE_DIGEST=${{ needs.build-and-push.outputs.digest }}" >> $GITHUB_ENV

    - name: Verify the digest value
      run: echo "Using Digest:$IMAGE_DIGEST"

    - name: Generate SLSA Provenance
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository }}
        IMAGE_DIGEST=${{ needs.build-and-push.outputs.digest }}

        docker buildx create --use
        docker buildx inspect --bootstrap
        docker buildx build --provenance=mode=max --output=type=local,dest=./provenance .

        ls -la ./provenance  # Debug: Check provenance exists
        cat ./provenance/index.json | jq .  # Debug: Print provenance metadata

        # Move provenance to expected file
        mv ./provenance/index.json slsa-provenance.json

    - name: Sign provenance attestation
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository }}
        IMAGE_DIGEST=${{ needs.build-and-push.outputs.digest }}

        cosign attest --predicate slsa-provenance.json --yes ${IMAGE_NAME}@${IMAGE_DIGEST}

    - name: Verify signed provenance attestation
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository }}
        IMAGE_DIGEST=${{ needs.build-and-push.outputs.digest }}

        cosign verify-attestation --type slsaprovenance \
          --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
          --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/Docker%20Image%20CI.yml@refs/heads/main" \
          ${IMAGE_NAME}@${IMAGE_DIGEST} | jq -r '.[0].payload' | base64 -d | jq .

    - name: Upload provenance to GitHub Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: provenance
        path: slsa-provenance.json
